import { connectDB } from '../config/database.mjs'
import User from '../models/User.mjs'
import Article from '../models/Article.mjs'

const initializeDatabase = async () => {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB Atlas...')
    await connectDB()
    
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...')
    await User.deleteMany({})
    await Article.deleteMany({})
    
    console.log('üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    const users = await User.create([
      {
        email: 'admin@example.com',
        password: 'admin123',
        name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        role: 'admin'
      },
      {
        email: 'user1@example.com',
        password: 'user123',
        name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        role: 'user'
      },
      {
        email: 'user2@example.com',
        password: 'user123',
        name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
        role: 'user'
      }
    ])
    
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π...')
    const articles = await Article.create([
      {
        title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Express.js',
        content: 'Express.js - —ç—Ç–æ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∏ –≥–∏–±–∫–∏–π –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è Node.js, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —à–∏—Ä–æ–∫–∏–π –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. Express —É–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ API –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–µ–∑–Ω—ã—Ö HTTP-—É—Ç–∏–ª–∏—Ç –∏ middleware –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–¥–µ–∂–Ω—ã—Ö API.',
        author: users[0]._id,
        tags: ['express', 'nodejs', 'web-development'],
        status: 'published'
      },
      {
        title: '–†–∞–±–æ—Ç–∞ —Å MongoDB –∏ Mongoose',
        content: 'MongoDB - —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è NoSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ JSON-–ø–æ–¥–æ–±–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. Mongoose - —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è Node.js, –∫–æ—Ç–æ—Ä–∞—è —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å MongoDB, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è —Å—Ö–µ–º—É-–±–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.',
        author: users[1]._id,
        tags: ['mongodb', 'mongoose', 'database'],
        status: 'published'
      },
      {
        title: '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å Passport.js',
        content: 'Passport.js - —ç—Ç–æ middleware –¥–ª—è Node.js, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –û–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ 500 —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è –ª–æ–∫–∞–ª—å–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, OAuth, OpenID –∏ –¥—Ä—É–≥–∏–µ. Passport —É–ø—Ä–æ—â–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.',
        author: users[2]._id,
        tags: ['passport', 'authentication', 'security'],
        status: 'published'
      },
      {
        title: 'Middleware –≤ Express.js',
        content: 'Middleware –≤ Express.js - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –æ–±—ä–µ–∫—Ç—É –∑–∞–ø—Ä–æ—Å–∞ (req), –æ–±—ä–µ–∫—Ç—É –æ—Ç–≤–µ—Ç–∞ (res) –∏ —Å–ª–µ–¥—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ middleware –≤ —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç. Middleware –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥, –∏–∑–º–µ–Ω—è—Ç—å –æ–±—ä–µ–∫—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞, –∑–∞–≤–µ—Ä—à–∞—Ç—å —Ü–∏–∫–ª –∑–∞–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π middleware –≤ —Å—Ç–µ–∫–µ.',
        author: users[0]._id,
        tags: ['express', 'middleware', 'nodejs'],
        status: 'published'
      },
      {
        title: '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å Joi',
        content: 'Joi - —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ JavaScript. –û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Å—Ö–µ–º—ã –¥–ª—è –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏—Ö. Joi –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, API –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.',
        author: users[1]._id,
        tags: ['joi', 'validation', 'data'],
        status: 'published'
      }
    ])
    
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!')
    console.log(`üìä –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`)
    console.log(`üìù –°–æ–∑–¥–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: ${articles.length}`)
    
    console.log('\nüë§ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:')
    users.forEach(user => {
      console.log(`  - ${user.name} (${user.email}) - ${user.role}`)
    })
    
    console.log('\nüìÑ –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏:')
    articles.forEach(article => {
      console.log(`  - ${article.title} (–∞–≤—Ç–æ—Ä: ${users.find(u => u._id.equals(article.author))?.name})`)
    })
    
    process.exit(0)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
    process.exit(1)
  }
}

initializeDatabase() 